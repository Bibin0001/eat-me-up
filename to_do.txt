Make the user able to make recipes

Make the home page when an user made his profile to display his needed macros and hist eating plan

Fix the profile details page to show all the neccesary statistics


visible.field.widget.attrs['class'] = 'form-control'





script>
        var attributes = {

        {% for ingredient in ingredients %}
            {{ ingredient.pk }}: {
            calories:{{ ingredient.calories_per_gram }},
            proteins:{{ ingredient.proteins_per_gram }},
            fats:{{ ingredient.fats_per_gram }},
            carbs:{{ ingredient.carbs_per_gram }}
                },
        {% endfor %}
        }
    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            var searchInput = $('#search-input');
            var selectMenu = $('#select-menu');

            // Function to filter the options based on search query
            function filterOptions() {
                var searchQuery = searchInput.val().toLowerCase();
                selectMenu.find('option').each(function () {
                    var optionText = $(this).text().toLowerCase();
                    var isVisible = optionText.indexOf(searchQuery) > -1;
                    $(this).toggle(isVisible);
                });
            }

            // Event listener for search input changes
            searchInput.on('input', filterOptions);
        });
        $(document).ready(function () {
            var formsetRowsContainer = $('#formset-rows');
            var addButton = $('#add-formset-row');

            addButton.click(function () {
                var newFormsetRow = formsetRowsContainer.children('.formset-row:first').clone();
                newFormsetRow.find(':input').val(''); // Clear input values of cloned row
                formsetRowsContainer.append(newFormsetRow);

                // Call the function to update recipe macros
                updateRecipeMacros();
            });

            document.addEventListener('change', onChange);

            function onChange(e) {
                if (e.target.attributes.dataChange) {
                    var selects = $('[dataChange="updateRecipeMacros"]')
                    var total_calories = 0
                    var total_proteins = 0
                    var total_fats = 0
                    var total_carbs = 0

                    var quantity = 0


                    for (var i = 0; i < selects.length; i++) {
                        var id = $(selects[i]).val()
                        var element = attributes[id];

                        if(element) {
                            total_calories += element.calories
                            total_proteins += element.proteins
                            total_fats += element.fats
                            total_carbs += element.carbs
                        }

                    }
                    $('#total-calories').text(total_calories)
                    $('#total-proteins').text(total_proteins)
                    $('#total-fats').text(total_fats)
                    $('#total-carbs').text(total_carbs)


                }


            }


            // Update recipe macros when ingredient form fields change
            formsetRowsContainer.on('input', '.ingredient-field', function () {
                updateRecipeMacros();
            });

            // Function to update recipe macros

        });

        function updateRecipeMacros() {
            var ingredientForms = $('.formset-row');
            var totalCalories = 0;
            var totalProteins = 0;
            var totalFats = 0;
            var totalCarbs = 0;

            ingredientForms.each(function () {
                var quantity = parseFloat($(this).find('.quantity-input').val());
                var caloriesPerGram = parseFloat($(this).find('.calories-input').val());
                var proteinsPerGram = parseFloat($(this).find('.proteins-input').val());
                var fatsPerGram = parseFloat($(this).find('.fats-input').val());
                var carbsPerGram = parseFloat($(this).find('.carbs-input').val());


                var ingredientCalories = quantity * caloriesPerGram;
                var ingredientProteins = quantity * proteinsPerGram;
                var ingredientFats = quantity * fatsPerGram;
                var ingredientCarbs = quantity * carbsPerGram;

                totalCalories += ingredientCalories;
                totalProteins += ingredientProteins;
                totalFats += ingredientFats;
                totalCarbs += ingredientCarbs;
            });

            {#$('#total-calories').text(totalCalories.toFixed(2));#}
            {#$('#total-proteins').text(totalProteins.toFixed(2));#}
            {#$('#total-fats').text(totalFats.toFixed(2));#}
            {#$('#total-carbs').text(totalCarbs.toFixed(2));#}
        }
    </script>
